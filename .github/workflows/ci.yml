name: CI
on:
  pull_request:
    branches:
      - main

jobs:
  prettier:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15, 16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
          restore-keys: |
            nodeModules-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
        env:
          CI: true
      - name: Prettier
        run: yarn run prettier --check .
        env:
          CI: true

  eslint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15, 16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
          restore-keys: |
            nodeModules-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
        env:
          CI: true
      - name: ESLint
        run: yarn run lint
        env:
          CI: true

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15, 16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use cached node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
          restore-keys: |
            nodeModules-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
        env:
          CI: true
      - name: Build
        run: yarn run build
        env:
          CI: true
